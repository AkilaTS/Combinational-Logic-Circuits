/**
 * Chip to generate the partial product PPi for signed integer multiplication
 */

CHIP PPGenS {
    IN a[8],b;
    OUT out[16];

    PARTS:
    And(a=a[0],b=b,out=out[0]); //generating the bits of the partial product
    And(a=a[1],b=b,out=out[1]);
    And(a=a[2],b=b,out=out[2]);
    And(a=a[3],b=b,out=out[3]);
    And(a=a[4],b=b,out=out[4]);
    And(a=a[5],b=b,out=out[5]);
    And(a=a[6],b=b,out=out[6]);
    And(a=a[7],b=b,out=out[7]);

    And(a=a[7],b=b,out=out[8]); //these lines are for implementing sign extension
    And(a=a[7],b=b,out=out[9]);
    And(a=a[7],b=b,out=out[10]);
    And(a=a[7],b=b,out=out[11]);
    And(a=a[7],b=b,out=out[12]);
    And(a=a[7],b=b,out=out[13]);
    And(a=a[7],b=b,out=out[14]);
    And(a=a[7],b=b,out=out[15]);
}